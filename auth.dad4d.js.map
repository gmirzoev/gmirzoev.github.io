{"version":3,"sources":["utils/utils.ts","utils/index.ts","actions/authActions.ts","components/Footer/Footer.scss","components/Footer/Footer.tsx","components/Footer/index.ts","components/Auth/AuthForm.scss","components/Auth/Auth.scss","components/Auth/AuthForm.tsx","components/Auth/Auth.tsx","components/Auth/index.ts"],"names":["utils_Utils","[object Object]","stand","API_HOST","API_VERSION","API_KEY","tmdb","window","__TMDB_CONFIG__","errMsg","errTitle","lib","error","Error","path","getConfig","url","includes","cb","delay","context","timeoutId","args","clearTimeout","setTimeout","apply","ms","Promise","resolve","__webpack_require__","d","__webpack_exports__","login","logout","constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","utils__WEBPACK_IMPORTED_MODULE_1__","uLogin","uPassword","type","payload","async","wait","user","JSON","parse","localStorage","getItem","find","u","toLowerCase","password","sessionStorage","setItem","stringify","handleError","removeItem","module","exports","footer","powered-by-text","poweredByText","powered-by-logo","poweredByLogo","styles","Footer_Footer","react","className","auth-form","authForm","auth-form-field","authFormField","auth-form-field-error-msg","authFormFieldErrorMsg","auth-form-field-input","authFormFieldInput","auth-form-field-input-error","authFormFieldInputError","auth-form-sing-in-btn","authFormSingInBtn","auth","auth-inner-wrapper","authInnerWrapper","auth-available-users","authAvailableUsers","auth-available-users-title","authAvailableUsersTitle","auth-available-users-item","authAvailableUsersItem","AuthForm_RenderInputField","placeholder","input","meta","this","props","Object","assign","classnames","touched","Auth_AuthForm","reduxForm_default","form","validate","values","errors","handleSubmit","submitting","onSubmit","Field_default","a","name","component","disabled","Auth_styles","components_Auth_Auth","es","undefined","dispatch","authHandler","authActions","state","users","handleAuthSubmit","map","key","Footer"],"mappings":"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","file":"auth.dad4d.js","sourcesContent":["// tslint:disable:no-any\nimport { toastr } from 'react-redux-toastr'\n\nexport default class Utils {\n  /* Returns application configuration data */\n  public static getConfig(): IAppConfig {\n    return {\n      stand: window.__STAND_CONFIG__,\n      tmdb: window.__TMDB_CONFIG__\n    }\n  }\n\n  /* Error handling helper function */\n  public static handleError(errMsg: string = 'Unknown error occured', errTitle: string = ''): never {\n    toastr.error(errTitle, errMsg)\n    throw new Error(errMsg)\n  }\n\n  /* Adds hostname for provided path */\n  public static createTmdbUrl(path: string): string {\n    const { API_HOST, API_VERSION, API_KEY } = Utils.getConfig().stand\n    let url = `${API_HOST}/${API_VERSION}${path[0] === '/' ? '' : '/'}${path}`\n    if (path.includes('?')) {\n      url += `&api_key=${API_KEY}`\n    } else {\n      url += `?api_key=${API_KEY}`\n    }\n    return url\n  }\n\n  /**\n   * Ensures that provided callback will not be called again until a certain\n   * amount of time has passed after previous call\n   */\n  public static debounce(cb: Function, delay: number = 100, context: any = null) {\n    let timeoutId: number\n    return function debounced(...args: any[]) {\n      clearTimeout(timeoutId)\n      timeoutId = window.setTimeout(() => cb.apply(context, args), delay)\n    }\n  }\n\n  /* Wait helper function. Used mostly to simulate latency. */\n  public static wait(ms: number = 0): Promise<undefined> {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n}\n","export { default as Utils } from './utils'\nexport { default as Logger } from './logger'\n","import { LOGIN, LOGOUT } from 'constants/actionTypes'\nimport { Utils } from 'utils'\n\nexport function login(uLogin: string, uPassword: string) {\n  return {\n    type: LOGIN,\n    payload: async () => {\n      await Utils.wait(500) // add some delay\n      const users: IUser[] = JSON.parse(localStorage.getItem('users') || '[]')\n      const user = users.find(u => u.login === uLogin.toLowerCase() && u.password === uPassword)\n      if (!user) {\n        return Utils.handleError('User not found')\n      }\n      sessionStorage.setItem('user', JSON.stringify(user))\n      return { user }\n    }\n  }\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT,\n    payload: async () => {\n      await Utils.wait(200)\n      sessionStorage.removeItem('user')\n      return true\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"_1BHfS\",\"powered-by-text\":\"_2yu9A\",\"poweredByText\":\"_2yu9A\",\"powered-by-logo\":\"_3BLsl\",\"poweredByLogo\":\"_3BLsl\"};","import * as React from 'react'\nconst styles = require('./Footer.scss')\n\nexport default class Footer extends React.Component {\n  render() {\n    return (\n      <footer className={styles.footer}>\n        <span className={styles.poweredByText}>\n          This product uses the TMDb API but is not endorsed or certified by TMDb.\n        </span>\n        <div className={styles.poweredByLogo} />\n      </footer>\n    )\n  }\n}\n","export { default } from './Footer'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth-form\":\"_27bNL\",\"authForm\":\"_27bNL\",\"auth-form-field\":\"_3uESX\",\"authFormField\":\"_3uESX\",\"auth-form-field-error-msg\":\"_2F4e4\",\"authFormFieldErrorMsg\":\"_2F4e4\",\"auth-form-field-input\":\"_4lagQ\",\"authFormFieldInput\":\"_4lagQ\",\"auth-form-field-input-error\":\"_3V69r\",\"authFormFieldInputError\":\"_3V69r\",\"auth-form-sing-in-btn\":\"_3CKs7\",\"authFormSingInBtn\":\"_3CKs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"_3LKQQ\",\"auth-inner-wrapper\":\"pNqZh\",\"authInnerWrapper\":\"pNqZh\",\"auth-available-users\":\"_1jKDR\",\"authAvailableUsers\":\"_1jKDR\",\"auth-available-users-title\":\"HVlGi\",\"authAvailableUsersTitle\":\"HVlGi\",\"auth-available-users-item\":\"_8fUxx\",\"authAvailableUsersItem\":\"_8fUxx\"};","import * as React from 'react'\nimport * as classNames from 'classnames'\nimport reduxForm, { InjectedFormProps } from 'redux-form/lib/reduxForm'\nimport Field, { WrappedFieldProps } from 'redux-form/lib/Field'\nconst styles = require('./AuthForm.scss')\n\nconst validate = (values: ICredentials) => {\n  const errors: Partial<ICredentials> = {}\n  if (!values.login) {\n    errors.login = 'Enter your login'\n  }\n  if (!values.password) {\n    errors.password = 'Enter your password'\n  }\n  return errors\n}\n\ninterface IAuthInputFieldProps {\n  type: string,\n  placeholder: string\n}\n\nclass RenderInputField extends React.Component<IAuthInputFieldProps & WrappedFieldProps> {\n  render () {\n    const { type, placeholder, input, meta } = this.props\n    return (\n      <div className={styles.authFormField}>\n        <input\n          {...input}\n          className={classNames(styles.authFormFieldInput, {\n            [styles.authFormFieldInputError]: meta.touched && meta.error\n          })}\n          placeholder={placeholder}\n          type={type}\n        />\n        {meta.touched && meta.error && <span className={styles.authFormFieldErrorMsg}>{meta.error}</span>}\n      </div>\n    )\n  }\n}\n\nclass AuthForm extends React.Component<InjectedFormProps<ICredentials>> {\n  render () {\n    const { handleSubmit, submitting } = this.props\n    return (\n      <form\n        className={styles.authForm}\n        onSubmit={handleSubmit}\n      >\n        <Field\n          name=\"login\"\n          type=\"text\"\n          placeholder=\"Login...\"\n          component={RenderInputField}\n        />\n        <Field\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password...\"\n          component={RenderInputField}\n        />\n        <button\n          type=\"submit\"\n          className={styles.authFormSingInBtn}\n          disabled={submitting}\n        >\n          Sing in\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default reduxForm({\n  form: 'authentication',\n  validate\n})(AuthForm)\n","import * as React from 'react'\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { login } from 'actions/authActions'\nimport Footer from 'components/Footer'\nimport AuthForm from './AuthForm'\nconst styles = require('./Auth.scss')\n\ninterface IAuthProps {\n  authHandler(name: string, password: string): void\n}\n\ninterface IAuthState {\n  users: IUser[]\n}\n\nexport class Auth extends React.Component<IAuthProps, IAuthState> {\n  state = {\n    users: JSON.parse(localStorage.getItem('users') || '[]')\n  }\n\n  handleAuthSubmit = (values: ICredentials) => {\n    this.props.authHandler(values.login, values.password)\n  }\n\n  render() {\n    return (\n      <div className={styles.auth}>\n        <div className={styles.authAvailableUsers}>\n          <div className={styles.authAvailableUsersTitle}>Available users list</div>\n          <div>\n            {this.state.users && this.state.users.map((user: IUser) => (\n              <div\n                key={user.login}\n                className={styles.authAvailableUsersItem}\n              >\n                {`{ login: ${user.login}, password: ${user.password} }`}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className={styles.authInnerWrapper}>\n          <AuthForm onSubmit={this.handleAuthSubmit} />\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  authHandler: (name: string, password: string) => { dispatch(login(name, password)) }\n})\n\nexport default connect(undefined, mapDispatchToProps)(Auth)\n","export { default } from './Auth'\n"],"sourceRoot":""}