{"version":3,"sources":["utils/utils.ts","utils/index.ts","actions/authActions.ts","components/Footer/Footer.scss","components/Footer/Footer.tsx","components/Footer/index.ts","components/Auth/AuthForm.scss","components/Auth/Auth.scss","components/Auth/AuthForm.tsx","components/Auth/Auth.tsx","components/Auth/index.ts"],"names":["utils_Utils","[object Object]","stand","API_HOST","API_VERSION","API_KEY","tmdb","window","__TMDB_CONFIG__","errMsg","errTitle","lib","error","Error","path","getConfig","url","includes","cb","delay","context","timeoutId","args","clearTimeout","setTimeout","apply","ms","Promise","resolve","__webpack_require__","d","__webpack_exports__","login","logout","constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","utils__WEBPACK_IMPORTED_MODULE_1__","uLogin","uPassword","type","LOGIN","payload","async","wait","user","JSON","parse","localStorage","getItem","find","u","toLowerCase","password","sessionStorage","setItem","stringify","handleError","LOGOUT","removeItem","module","exports","footer","powered-by-text","poweredByText","powered-by-logo","poweredByLogo","Footer_Footer_Footer","react","className","Footer_Footer","auth-form","authForm","auth-form-field","authFormField","auth-form-field-error-msg","authFormFieldErrorMsg","auth-form-field-input","authFormFieldInput","auth-form-field-input-error","authFormFieldInputError","auth-form-sing-in-btn","authFormSingInBtn","auth","auth-inner-wrapper","authInnerWrapper","auth-available-users","authAvailableUsers","auth-available-users-title","authAvailableUsersTitle","auth-available-users-item","authAvailableUsersItem","AuthForm_RenderInputField","placeholder","input","meta","this","props","Auth_AuthForm","Object","assign","classnames","touched","components_Auth_AuthForm","reduxForm_default","form","validate","values","errors","handleSubmit","submitting","onSubmit","Field_default","a","name","component","disabled","mapDispatchToProps","authActions","components_Auth_Auth","es","undefined","state","users","handleAuthSubmit","Auth_Auth","map","key","Footer"],"mappings":"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","file":"auth.08bc9.js","sourcesContent":["// tslint:disable:no-any\nimport { toastr } from 'react-redux-toastr'\n\nexport default class Utils {\n  /* Returns application configuration data */\n  public static getConfig(): IAppConfig {\n    return {\n      stand: window.__STAND_CONFIG__,\n      tmdb: window.__TMDB_CONFIG__\n    }\n  }\n\n  /* Error handling helper function */\n  public static handleError(errMsg: string = 'Unknown error occured',\n                            errTitle: string = ''): never {\n    toastr.error(errTitle, errMsg)\n    throw new Error(errMsg)\n  }\n\n  /* Adds hostname for provided path */\n  public static createTmdbUrl(path: string): string {\n    const { API_HOST, API_VERSION, API_KEY } = Utils.getConfig().stand\n    let url = `${API_HOST}/${API_VERSION}${path[0] === '/' ? '' : '/'}${path}`\n    if (path.includes('?')) {\n      url += `&api_key=${API_KEY}`\n    } else {\n      url += `?api_key=${API_KEY}`\n    }\n    return url\n  }\n\n  /**\n   * Ensures that provided callback will not be called again until a certain\n   * amount of time has passed after previous call\n   */\n  public static debounce(cb: Function, delay: number = 100, context: any = null) {\n    let timeoutId: number\n    return function debounced(...args: any[]) {\n      clearTimeout(timeoutId)\n      timeoutId = window.setTimeout(() => cb.apply(context, args), delay)\n    }\n  }\n\n  /* Wait helper function. Used mostly to simulate latency. */\n  public static wait(ms: number = 0): Promise<undefined> {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n}\n","export { default as Utils } from './utils'\nexport { default as Logger } from './logger'\n","import { Auth } from 'constants/actionTypes'\nimport { Utils } from 'utils'\n\nexport function login(uLogin: string, uPassword: string) {\n  return {\n    type: Auth.LOGIN,\n    payload: async () => {\n      await Utils.wait(500) // add some delay\n      const users: IUser[] = JSON.parse(localStorage.getItem('users') || '[]')\n      const user = users.find(u => u.login === uLogin.toLowerCase() && u.password === uPassword)\n      if (!user) {\n        return Utils.handleError('User not found')\n      }\n      sessionStorage.setItem('user', JSON.stringify(user))\n      return { user }\n    }\n  }\n}\n\nexport function logout() {\n  return {\n    type: Auth.LOGOUT,\n    payload: async () => {\n      await Utils.wait(200)\n      sessionStorage.removeItem('user')\n      return true\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"_1BHfS\",\"powered-by-text\":\"_2yu9A\",\"poweredByText\":\"_2yu9A\",\"powered-by-logo\":\"_3BLsl\",\"poweredByLogo\":\"_3BLsl\"};","import * as React from 'react'\nimport * as styles from './Footer.scss'\n\nexport default class Footer extends React.Component {\n  render() {\n    return (\n      <footer className={styles.footer}>\n        <span className={styles.poweredByText}>\n          This product uses the TMDb API but is not endorsed or certified by TMDb.\n        </span>\n        <div className={styles.poweredByLogo} />\n      </footer>\n    )\n  }\n}\n","export { default } from './Footer'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth-form\":\"_27bNL\",\"authForm\":\"_27bNL\",\"auth-form-field\":\"_3uESX\",\"authFormField\":\"_3uESX\",\"auth-form-field-error-msg\":\"_2F4e4\",\"authFormFieldErrorMsg\":\"_2F4e4\",\"auth-form-field-input\":\"_4lagQ\",\"authFormFieldInput\":\"_4lagQ\",\"auth-form-field-input-error\":\"_3V69r\",\"authFormFieldInputError\":\"_3V69r\",\"auth-form-sing-in-btn\":\"_3CKs7\",\"authFormSingInBtn\":\"_3CKs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"_3LKQQ\",\"auth-inner-wrapper\":\"pNqZh\",\"authInnerWrapper\":\"pNqZh\",\"auth-available-users\":\"_1jKDR\",\"authAvailableUsers\":\"_1jKDR\",\"auth-available-users-title\":\"HVlGi\",\"authAvailableUsersTitle\":\"HVlGi\",\"auth-available-users-item\":\"_8fUxx\",\"authAvailableUsersItem\":\"_8fUxx\"};","import * as React from 'react'\nimport * as classNames from 'classnames'\nimport reduxForm, { InjectedFormProps } from 'redux-form/lib/reduxForm'\nimport Field, { WrappedFieldProps } from 'redux-form/lib/Field'\nimport * as styles from './AuthForm.scss'\n\nconst validate = (values: ICredentials) => {\n  const errors: Partial<ICredentials> = {}\n  if (!values.login) {\n    errors.login = 'Enter your login'\n  }\n  if (!values.password) {\n    errors.password = 'Enter your password'\n  }\n  return errors\n}\n\ninterface IAuthInputFieldProps {\n  type: string;\n  placeholder: string;\n}\n\nclass RenderInputField extends React.Component<IAuthInputFieldProps & WrappedFieldProps> {\n  render () {\n    const { type, placeholder, input, meta } = this.props\n    return (\n      <div className={styles.authFormField}>\n        <input\n          {...input}\n          className={classNames(styles.authFormFieldInput, {\n            [styles.authFormFieldInputError]: meta.touched && meta.error\n          })}\n          placeholder={placeholder}\n          type={type}\n        />\n        {meta.touched && meta.error && (\n          <span className={styles.authFormFieldErrorMsg}>\n            {meta.error}\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\nclass AuthForm extends React.Component<InjectedFormProps<ICredentials>> {\n  render () {\n    const { handleSubmit, submitting } = this.props\n    return (\n      <form\n        className={styles.authForm}\n        onSubmit={handleSubmit}\n      >\n        <Field\n          name=\"login\"\n          type=\"text\"\n          placeholder=\"Login...\"\n          component={RenderInputField}\n        />\n        <Field\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password...\"\n          component={RenderInputField}\n        />\n        <button\n          type=\"submit\"\n          className={styles.authFormSingInBtn}\n          disabled={submitting}\n        >\n          Sing in\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default reduxForm({\n  form: 'authentication',\n  validate\n})(AuthForm)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from 'actions/authActions'\nimport Footer from 'components/Footer'\nimport AuthForm from './AuthForm'\nimport * as styles from './Auth.scss'\n\ninterface IAuthDispatchProps {\n  login(name: string, password: string): void;\n}\n\ntype IAuthProps = IAuthDispatchProps\n\ninterface IAuthState {\n  users: IUser[];\n}\n\nexport class Auth extends React.Component<IAuthProps, IAuthState> {\n  state = {\n    users: JSON.parse(localStorage.getItem('users') || '[]')\n  }\n\n  handleAuthSubmit = (values: ICredentials) => {\n    this.props.login(values.login, values.password)\n  }\n\n  render() {\n    return (\n      <div className={styles.auth}>\n        <div className={styles.authAvailableUsers}>\n          <div className={styles.authAvailableUsersTitle}>Available users list</div>\n          <div>\n            {this.state.users && this.state.users.map((user: IUser) => (\n              <div\n                key={user.login}\n                className={styles.authAvailableUsersItem}\n              >\n                {`{ login: ${user.login}, password: ${user.password} }`}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className={styles.authInnerWrapper}>\n          <AuthForm onSubmit={this.handleAuthSubmit} />\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps: IAuthDispatchProps = { login }\n\nexport default connect(undefined, mapDispatchToProps)(Auth)\n","export { default } from './Auth'\n"],"sourceRoot":""}